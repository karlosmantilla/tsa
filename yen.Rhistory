q()
remesas<-read.table("yen_usd.txt",header=T,sep="\t",dec=",")
rm(list=ls(all=TRUE))
ls()
yen<-read.table("yen_usd.txt",header=T,sep="\t",dec=",")
head(yen)
yen<-read.table("yen_usd.txt",header=T)
head(yen)
y<-ts(y,start=c(1973,1),freq=12)
y<-ts(yen$y,start=c(1973,1),freq=12)
y
plot(y)
fechas = seq(as.Date("2000/1/1"), length.out = length(y), by = "months")
ts.plot(y,main="Remesas")
ts.plot(y,main="Yen")
# otros comandos para graficar con fechas con mas detalle: mes año
np = length(y)
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.año = seq(fechas[1],fechas[np],"years")
plot(fechas,y, main="Yen", xaxt="n", panel.first = grid(),type="l",ylab="remesas.mes", lwd = 2)
np = length(y)
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.año = seq(fechas[1],fechas[np],"years")
plot(fechas,y, main="Yen", xaxt="n", panel.first = grid(),type="l"
ylab="Yen.Mes", lwd = 2)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.año, labels = FALSE, tcl = 0.2)
hean(yen)
head(yen)
fechas = seq(as.Date("1973/1/1"), length.out = length(y), by = "months")
# grafica con fechas
ts.plot(y,main="Yen")
# otros comandos para graficar con fechas con mas detalle: mes año
np = length(y)
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.año = seq(fechas[1],fechas[np],"years")
plot(fechas,y, main="Yen", xaxt="n", panel.first = grid(),type="l"
ylab="Yen.Mes", lwd = 2)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.año, labels = FALSE, tcl = 0.2)
np = length(y)
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.año = seq(fechas[1],fechas[np],"years")
plot(fechas,y, main="Yen", xaxt="n", panel.first = grid(),type="l",
ylab="Yen.Mes", lwd = 2)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.año, labels = FALSE, tcl = 0.2)
T = length(y)
yi = y[1:(T-12)]
yf = y[(T-12+1):T]
# Ajustar 4 modelos: lineal, cuadratico, cubico, loglin
t = seq(1:(T-12))
t2 = t^2
t3 = t^3
lyi = log(yi)
mod.lin = lm(yi~t)
mod.cuad = lm(yi~t+t2)
mod.cub = lm(yi~t+t2+t3)
mod.llin = lm(lyi~t) # auxiliar para el exponencial
summary(mod.lin)
summary(mod.cuad)
summary(mod.cub)
# Modelo Exponencial lineal:
# paso 1) estimar el modelo auxiliar log linear
mod.llin = lm(lyi~t)
# paso 2) guardar los parametros del loglineal
b0.est = mod.llin$coefficient[1]
b1.est = mod.llin$coefficient[2]
# paso 3) guardar los datos en un data.frame
Ds = data.frame(yi,t)
# paso 4) usar la funcion nls
mod.exp = nls(yi~exp(beta0+beta1*t),
data=Ds,
start=list(beta0=b0.est, beta1=b1.est))
# paso 5) resultados
summary(mod.exp)
medidas = function(m,y,k){
# y = serie, m = modelo, k = numero parametros
T = length(y)
yest = fitted(m)
sse = sum((yest-y)^2)
ssr = sum((y-mean(y))^2)
mse = sse/(T-k)
R2 = 1-sse/ssr
Ra2 = 1-(T-1)*(1-R2)/(T-k)
aic = log((T-k)*exp(2*k/T)*mse/T)
bic = log(T^(k/T)*(T-k)*mse/T)
M = c(Ra2, mse, aic, bic)
names(M) = c("R2ajus","MSE","logAIC","logBIC")
return(M)}
M.lin = medidas(mod.lin,yi,2)
M.cuad = medidas(mod.cuad,yi,3)
M.cub = medidas(mod.cub,yi,4)
M.exp = medidas(mod.exp,yi,2)
M = cbind(M.lin,M.cuad,M.cub,M.exp)
(M)
r = mod.cub$residuals
par(mfrow=c(2,2))
plot(t,r,type="o",ylab="residuo")
abline(h=0,lty=2)
plot(density(r),xlab="x",main= "",ylab="Densidad")
qqnorm(r)
qqline(r,col=2)
acf(r,ci.type="ma",60)
par(mfrow=c(1,1))
length(y)
tt = seq(T-12,T,1)
tt2 = tt^2
pr2 = predict(mod.cub,data.frame(t=tt,t2=tt2))
plot(tt,yf,type="b")
lines(tt,pr2,col="red")
tt = seq(T-12,T,1)
tt2 = tt^2
tt3 = tt^3
pr2 = predict(mod.cub,data.frame(t=tt,t2=tt2,t3=tt3))
plot(tt,yf,type="b")
tt
yf
length(yf)
length(tt)
tt = seq(T-11,T,1)
tt2 = tt^2
tt3 = tt^3
pr2 = predict(mod.cub,data.frame(t=tt,t2=tt2,t3=tt3))
plot(tt,yf,type="b")
lines(tt,pr2,col="red")
plot(tt,pr2,col="red")
summary(pr2)
summary(yf)
plot(tt,yf,type="b",ylim=c(80,110)
lines(tt,pr2,col="red")
plot(tt,yf,type="b",ylim=c(80,110))
lines(tt,pr2,col="red")
library(forecast)
np = length(y)
ejex.mes = seq(fechas[1],fechas[np], "months")
ejex.año = seq(fechas[1],fechas[np],"years")
plot(fechas,y, main="Yen", xaxt="n", panel.first = grid(),type="l",
ylab="Yen.Mes", lwd = 2)
axis.Date(1, at=ejex.mes, format="%m/%y")
axis.Date(1, at=ejex.año, labels = FALSE, tcl = 0.2)
par(mfrow=c(2,2))
acf(y)
pacf(y)
plot(y)
(M)
plot(tt,yf,type="b",ylim=c(80,110))
lines(tt,pr2,col="red")
summary(mod.cub)
mes=season(y)
modeloest=lm(y~mes)
library(TSA)
utils:::menuInstallPkgs()
library(TSA);library(tseries)
mes=season(y)
modeloest=lm(y~mes)
summary(modeloest)
acf(Y)
acf(y)
pacf(y)
pacf(diff(y))
acf(diff(y))
acf(y)
pacf(y)
acf(diff(y))
pacf(diff(y))
yd<-diff(y)
m1<-arima(yd,order=c(0,0,1))
m2<-arima(yd,order=c(0,0,2))
m3<-arima(yd,order=c(0,0,3))
m1$aic;m2$aic;m3$aic
tsdiag(m1)
r2<-residuals(m1)
Box.test(r2,10,type="L")
predict(m1,12)
plot(predict(m1,12))
predict(m1,12)
plot(predict(m1,12),type='single')
plot(predict(m1,12),plot.type='single')
predict(m1,12)
plot(predict(m1$pred,12),plot.type='single')
plot(predict(m1$pred,12))
plot(predict(m1,12)$pred)
plot(y)
utils:::menuInstallPkgs()
library(urca)
ur.df(y,12)
?ur.df
ur.df(y,lags=12)
summary(ur.df(y,lags=12))
acf(y)
pacf(y)
acf(log(y))
pacf(log(y))
acf(log(y))
pacf(log(y))
acf(y)
pacf(y)
wd=as.vector(diff(diff(window(y),12)))
acf(wd,lag.max=36); pacf(wd,lag.max=24)
armasubsets(y,nar=14,nma=14)
plot(armasubsets(y,nar=14,nma=14))
plot(armasubsets(y,nar=14,nma=14))
m1arima<-arima(y,order=c(1,1,1))
m1arima
tsdiag(m1arima)
r3<-residuals(m1arima)
Box.test(r3,10,type="L")
m2arima<-arima(y,order=c(2,1,1))
m1arima$aic;m2arima$aic
utils:::menuInstallPkgs()
library(forecast)
auto.arima(y)
auto.arima(y)$aic;m1arima$aic
pre1<-predict(m1arima,12)
pre1
plot(pre1$pred)
plot(y)
points(fitted(m1arima))
lines(fitted(m1arima))
plot(fitted(m1arima))
fitted(m1arima)
m1arima
?fitted
predict(m1arima)
predict(m1arima,12)
plot(pre1$pred)
